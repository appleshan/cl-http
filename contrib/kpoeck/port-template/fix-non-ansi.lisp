(in-package :cl-user)

(defun fix-it ()
  (let ((defgeneric (find-symbol "DEFGENERIC" (find-package :mit-defgeneric)))
        (loop (find-symbol "LOOP" (find-package :mit-loop)))
        (loop-finish (find-symbol "LOOP-FINISH" (find-package :mit-loop)))
        )
    
    (dolist (package (list (find-package :md5)
                           (find-package :sha)
                           (find-package :url)
                           (find-package :www-utils)
                           (find-package :http)
                           (find-package :html4.0)
                           #+no (find-package :lambda-ir)
			   ))
      (shadowing-import defgeneric package))
    (dolist (package (list (find-package :www-utils)
                           (find-package :url)
                           (find-package :http)))
      (shadowing-import loop package)
      (shadowing-import loop-finish package))
    )
  )

(eval-when 
    (:load-toplevel :execute)  
  (fix-it)
  )              